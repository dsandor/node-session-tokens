0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', './' ]
2 info using npm@1.4.27
3 info using node@v0.10.31
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ './' ]
6 verbose cache add [ './', null ]
7 verbose cache add name=undefined spec="./" args=["./",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: './',
8 verbose parsed url   path: './',
8 verbose parsed url   href: './' }
9 silly lockFile 0ee6c175- ./
10 verbose lock ./ /Users/dsandor/.npm/0ee6c175-.lock
11 verbose tar pack [ '/Users/dsandor/.npm/tokens/0.1.0/package.tgz', './' ]
12 verbose tarball /Users/dsandor/.npm/tokens/0.1.0/package.tgz
13 verbose folder ./
14 info prepublish tokens@0.1.0
15 silly lockFile 04cb2bca-tar tar://./
16 verbose lock tar://./ /Users/dsandor/.npm/04cb2bca-tar.lock
17 silly lockFile cd942afa-dor-npm-tokens-0-1-0-package-tgz tar:///Users/dsandor/.npm/tokens/0.1.0/package.tgz
18 verbose lock tar:///Users/dsandor/.npm/tokens/0.1.0/package.tgz /Users/dsandor/.npm/cd942afa-dor-npm-tokens-0-1-0-package-tgz.lock
19 silly lockFile 04cb2bca-tar tar://./
20 silly lockFile 04cb2bca-tar tar://./
21 silly lockFile cd942afa-dor-npm-tokens-0-1-0-package-tgz tar:///Users/dsandor/.npm/tokens/0.1.0/package.tgz
22 silly lockFile cd942afa-dor-npm-tokens-0-1-0-package-tgz tar:///Users/dsandor/.npm/tokens/0.1.0/package.tgz
23 silly lockFile a1713a2f-dsandor-npm-tokens-0-1-0-package /Users/dsandor/.npm/tokens/0.1.0/package
24 verbose lock /Users/dsandor/.npm/tokens/0.1.0/package /Users/dsandor/.npm/a1713a2f-dsandor-npm-tokens-0-1-0-package.lock
25 silly lockFile a1713a2f-dsandor-npm-tokens-0-1-0-package /Users/dsandor/.npm/tokens/0.1.0/package
26 silly lockFile a1713a2f-dsandor-npm-tokens-0-1-0-package /Users/dsandor/.npm/tokens/0.1.0/package
27 silly lockFile 0ee6c175- ./
28 silly lockFile 0ee6c175- ./
29 silly publish { name: 'tokens',
29 silly publish   version: '0.1.0',
29 silly publish   description: 'Simple session based token authorization hooks.',
29 silly publish   main: 'lib/index.js',
29 silly publish   repository: { type: 'git', url: 'git://github.com/dsandor/tokens' },
29 silly publish   author:
29 silly publish    { name: 'David Sandor',
29 silly publish      email: 'david.sandor@gmail.com',
29 silly publish      url: 'http://buildsucceeded.com/' },
29 silly publish   license: 'Apache-2.0',
29 silly publish   bugs: { url: 'https://github.com/dsandor/simpleauth/issues' },
29 silly publish   directories: { lib: './lib' },
29 silly publish   dependencies: { fs: '0.10.33', 'node-uuid': '1.4.1' },
29 silly publish   readme: '#Tokens for NodeJS\n\n##Purpose\n\nThe purpose of this module is to provide a simple lightweight framework for managing session tokens. \nThis module does NOT provide authentication functionality but rather authorizes requests to a REST service \nafter authentication has already taken place.  By using a session token and combining that with a nonce value tracked\nper session this module will help prevent session hijacking and cross site request forgery attacks.\n\n##Security Standards\n\nThis module implements best practices as specified in the [OWASP](http://www.owasp.org) [suggested best practices for securing REST services](https://www.owasp.org/index.php/REST_Security_Cheat_Sheet).\n\n##Usage\n\n###createSession\n\nCreate a session token with *createSession*.\n\n#####Method Signature\n\n\tcreateSession(complete, error)\n\n#####Example\n\n\tvar auth = require(\'tokens\')();\n\n\tauth.createSession(function (response) {\n\t\tconsole.log(\'sessionToken: %s\', response.sessionToken);\n\t\tconsole.log(\'sessionToken: %s\', response.nonce);\n\t\tconsole.log(\'sessionToken: %s\', response.expirationDateTime);\n\t},\n\tfunction(error) {\n\t\tconsole.log(\'error message: %s\', error.message);\n\t});\n\n####response: complete\n\nThe response will contain the newly created session token, the session\'s nonce value and the session expiration date and time.\n\n\t{\n\t    "sessionToken": "b0c96728-4c44-4c0a-9fca-5563fb1ebe44",\n\t    "nonce": 1,\n\t    "expiration": "2014-11-15T20:02:43.450Z"\n\t}\n\n###validateSession\n\nSubsequent requests can be validated by calling *validateSession*.\n\n#####Method Signature\n\n\tvalidateSession(sessionToken, nonce, complete, error)\n\n#####Example\n\n\tvar auth = require(\'tokens\')();\n\n\tauth.validateSession(sessionTokenFromRequest, nonceFromRequest,\n\tfunction(response) {\n\t\tconsole.log(\'sessionToken: %s\', response.sessionToken);\n\t\tconsole.log(\'sessionToken: %s\', response.nonce);\n\t\tconsole.log(\'sessionToken: %s\', response.expirationDateTime);\n\t},\n\tfunction(error) {\n\t\tconsole.log(\'error message: %s\', error.message);\n\t\tconsole.log(\'session token: %s\', error.sessionToken);\n\t\tconsole.log(\'nonce: %d\', error.nonce);\n\t});\n\n####responses: complete, error\n\n#####complete callback\nThe response from a complete callback contains the following information:\n\n\t{\n\t\tsuccess: true,\n\t\tfailureReason: \'\',\n\t\tnewSessionInformation: {\n\t\t\t\t\t\t\t\t sessionToken: "6faf36df-8877-4177-945b-700c4684e7c3",\n\t\t\t\t\t\t\t\t nonce: 2,\n\t\t\t\t\t\t\t\t expiration: "2014-11-16T16:41:41.062Z"\n\t\t\t\t\t\t\t   }\n\t}\n\nIf there is a failure the *success* property will be false, the *failureReason* will contain the error message, and the *newSessionInformation* will be undefined.\nA non-successful response is not the same as an error.  Failures that result in a non-successful result are caused because the session token or the nonce is incorrect.\n\n- A system error such as the inability to read or write to the persisted storage mechanism would result in an error.\n- If there is a system error the complete callback is never called.\n\n#####error callback\nThe error callback will be called if there is a system level error in processing the request. Known error conditions would be:\n\n- could not read or write to the persisted storage\n- invalid or corrupt session data retrieved\n\n###destroySession\n\nA session can be immediately destroyed (and removed from persisted storage) by calling *destroySession*.\n\n#####Method Signature\n\n\tdestroySession(sessionToken, complete, error)\n\n#####Example\n\n\tvar auth = require(\'tokens\')();\n\n\tauth.destroySession(sessionTokenFromRequest,\n\tfunction() {\n\t\tconsole.log(\'session %s destroyed.\', sessionTokenFromRequest);\n\t},\n\tfunction(error) {\n\t\tconsole.log(\'error message: %s\', error.message);\n\t\tconsole.log(\'session token: %s\', error.sessionToken);\n\t});\n\n####responses: complete, error\n\n#####complete callback\nThe complete callback is called with no method arguments as there is no data to return to the caller.\n\n*Please note that if there is an error condition (e.g. the session could not be deleted from the persistence store) the complete callback is not called.\n\n#####error callback\nThe error callback will be called if there is a system level error in processing the request. Known error conditions would be:\n\n- could not read or write to the persisted storage\n\n\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '30169f4d761d23497bcc57dab25c45ad779ac4e8',
29 silly publish   homepage: 'https://github.com/dsandor/tokens',
29 silly publish   _id: 'tokens@0.1.0',
29 silly publish   scripts: {},
29 silly publish   _shasum: '2cfc84a939503ad53a1871ee83ff5a5e352e6488',
29 silly publish   _from: './' }
30 verbose request where is /tokens
31 verbose request registry https://registry.npmjs.org/
32 verbose request id ceab9f71ec542cc4
33 verbose url raw /tokens
34 verbose url resolving [ 'https://registry.npmjs.org/', './tokens' ]
35 verbose url resolved https://registry.npmjs.org/tokens
36 verbose request where is https://registry.npmjs.org/tokens
37 info trying registry request attempt 1 at 20:31:47
38 http PUT https://registry.npmjs.org/tokens
39 http 403 https://registry.npmjs.org/tokens
40 verbose headers { date: 'Mon, 17 Nov 2014 02:31:47 GMT',
40 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '7140',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-jfk1030-JFK',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1416191507.264208,VS0,VE395',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: forbidden user: dsandor not authorized to modify tokens
42 error Changed: description "Encode and decode security tokens." -> "Simple session based token authorization hooks."
42 error Changed: dist-tags.latest "0.0.4" -> "0.1.0"
42 error Added: versions.0.1.0
42 error Changed: readme "# tokens\u000a\u000a[![Build](https://travis-ci.org/jaredhanson/node-tokens.png)](https://travis-ci.org/jaredhanson/node-tokens)\u000a[![Coverage](https://coveralls.io/repos/jaredhanson/node-tokens/badge.png)](https://coveralls.io/r/jaredhanson/node-tokens)\u000a[![Quality](https://codeclimate.com/github/jaredhanson/node-tokens.png)](https://codeclimate.com/github/jaredhanson/node-tokens)\u000a[![Dependencies](https://david-dm.org/jaredhanson/node-tokens.png)](https://david-dm.org/jaredhanson/node-tokens)\u000a\u000a" -> "#Tokens for NodeJS\u000a\u000a##Purpose\u000a\u000aThe purpose of this module is to provide a simple lightweight framework for managing session tokens. \u000aThis module does NOT provide authentication functionality but rather authorizes requests to a REST service \u000aafter authentication has already taken place.  By using a session token and combining that with a nonce value tracked\u000aper session this module will help prevent session hijacking and cross site request forgery attacks.\u000a\u000a##Security Standards\u000a\u000aThis module implements best practices as specified in the [OWASP](http://www.owasp.org) [suggested best practices for securing REST services](https://www.owasp.org/index.php/REST_Security_Cheat_Sheet).\u000a\u000a##Usage\u000a\u000a###createSession\u000a\u000aCreate a session token with *createSession*.\u000a\u000a#####Method Signature\u000a\u000a\u0009createSession(complete, error)\u000a\u000a#####Example\u000a\u000a\u0009var auth = require('tokens')();\u000a\u000a\u0009auth.createSession(function (response) {\u000a\u0009\u0009console.log('sessionToken: %s', response.sessionToken);\u000a\u0009\u0009console.log('sessionToken: %s', response.nonce);\u000a\u0009\u0009console.log('sessionToken: %s', response.expirationDateTime);\u000a\u0009},\u000a\u0009function(error) {\u000a\u0009\u0009console.log('error message: %s', error.message);\u000a\u0009});\u000a\u000a####response: complete\u000a\u000aThe response will contain the newly created session token, the session's nonce value and the session expiration date and time.\u000a\u000a\u0009{\u000a\u0009    \"sessionToken\": \"b0c96728-4c44-4c0a-9fca-5563fb1ebe44\",\u000a\u0009    \"nonce\": 1,\u000a\u0009    \"expiration\": \"2014-11-15T20:02:43.450Z\"\u000a\u0009}\u000a\u000a###validateSession\u000a\u000aSubsequent requests can be validated by calling *validateSession*.\u000a\u000a#####Method Signature\u000a\u000a\u0009validateSession(sessionToken, nonce, complete, error)\u000a\u000a#####Example\u000a\u000a\u0009var auth = require('tokens')();\u000a\u000a\u0009auth.validateSession(sessionTokenFromRequest, nonceFromRequest,\u000a\u0009function(response) {\u000a\u0009\u0009console.log('sessionToken: %s', response.sessionToken);\u000a\u0009\u0009console.log('sessionToken: %s', response.nonce);\u000a\u0009\u0009console.log('sessionToken: %s', response.expirationDateTime);\u000a\u0009},\u000a\u0009function(error) {\u000a\u0009\u0009console.log('error message: %s', error.message);\u000a\u0009\u0009console.log('session token: %s', error.sessionToken);\u000a\u0009\u0009console.log('nonce: %d', error.nonce);\u000a\u0009});\u000a\u000a####responses: complete, error\u000a\u000a#####complete callback\u000aThe response from a complete callback contains the following information:\u000a\u000a\u0009{\u000a\u0009\u0009success: true,\u000a\u0009\u0009failureReason: '',\u000a\u0009\u0009newSessionInformation: {\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009 sessionToken: \"6faf36df-8877-4177-945b-700c4684e7c3\",\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009 nonce: 2,\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009 expiration: \"2014-11-16T16:41:41.062Z\"\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009   }\u000a\u0009}\u000a\u000aIf there is a failure the *success* property will be false, the *failureReason* will contain the error message, and the *newSessionInformation* will be undefined.\u000aA non-successful response is not the same as an error.  Failures that result in a non-successful result are caused because the session token or the nonce is incorrect.\u000a\u000a- A system error such as the inability to read or write to the persisted storage mechanism would result in an error.\u000a- If there is a system error the complete callback is never called.\u000a\u000a#####error callback\u000aThe error callback will be called if there is a system level error in processing the request. Known error conditions would be:\u000a\u000a- could not read or write to the persisted storage\u000a- invalid or corrupt session data retrieved\u000a\u000a###destroySession\u000a\u000aA session can be immediately destroyed (and removed from persisted storage) by calling *destroySession*.\u000a\u000a#####Method Signature\u000a\u000a\u0009destroySession(sessionToken, complete, error)\u000a\u000a#####Example\u000a\u000a\u0009var auth = require('tokens')();\u000a\u000a\u0009auth.destroySession(sessionTokenFromRequest,\u000a\u0009function() {\u000a\u0009\u0009console.log('session %s destroyed.', sessionTokenFromRequest);\u000a\u0009},\u000a\u0009function(error) {\u000a\u0009\u0009console.log('error message: %s', error.message);\u000a\u0009\u0009console.log('session token: %s', error.sessionToken);\u000a\u0009});\u000a\u000a####responses: complete, error\u000a\u000a#####complete callback\u000aThe complete callback is called with no method arguments as there is no data to return to the caller.\u000a\u000a*Please note that if there is an error condition (e.g. the session could not be deleted from the persistence store) the complete callback is not called.\u000a\u000a#####error callback\u000aThe error callback will be called if there is a system level error in processing the request. Known error conditions would be:\u000a\u000a- could not read or write to the persisted storage\u000a\u000a\u000a"
42 error Changed: time.modified "2014-09-10T17:09:12.493Z" -> "2014-11-17T02:32:12.576Z"
42 error Added: time.0.1.0
42 error Changed: author.name "Jared Hanson" -> "David Sandor"
42 error Changed: author.email "jaredhanson@gmail.com" -> "david.sandor@gmail.com"
42 error Changed: author.url "http://www.jaredhanson.net/" -> "http://buildsucceeded.com/"
42 error Changed: repository.url "git://github.com/jaredhanson/node-tokens.git" -> "git://github.com/dsandor/tokens"
42 error Changed: homepage "https://github.com/jaredhanson/node-tokens" -> "https://github.com/dsandor/tokens"
42 error Deleted: keywords
42 error Changed: bugs.url "http://github.com/jaredhanson/node-tokens/issues" -> "https://github.com/dsandor/simpleauth/issues"
42 error Added: license
42 error Added: _attachments: tokens
42 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
42 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
42 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:943:16
42 error     at process._tickCallback (node.js:419:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Darwin 14.0.0
45 error command "node" "/usr/local/bin/npm" "publish" "./"
46 error cwd /Users/dsandor/Projects/GitHub/tokens
47 error node -v v0.10.31
48 error npm -v 1.4.27
49 verbose exit [ 1, true ]
